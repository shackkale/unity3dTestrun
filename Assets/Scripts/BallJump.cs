using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class BallJump : MonoBehaviour
{
    private Rigidbody rb;
    private bool _isOnGround;
    private Vector3 _velocity = Vector3.zero;

    // yes, i dont know how to parse those .json files. Sorry ._.
    private readonly float[] x = { 0, 0.3036996802f, 0.6084586199f, 0.9142588269f, 1.221082267f, 1.528910867f, 1.837726512f, 2.147511047f, 2.45824628f, 2.76991398f, 3.082495879f, 3.395973669f, 3.710329008f, 4.025543519f, 4.341598786f, 4.658476363f, 4.976157765f, 5.294624477f, 5.613857951f, 5.933839604f, 6.254550824f, 6.575972967f, 6.898087358f, 7.220875292f, 7.544318038f, 7.868396831f, 8.193092882f, 8.518387374f, 8.844261462f, 9.170696275f, 9.497672917f, 9.825172468f, 10.15317598f, 10.48166449f, 10.810619f, 11.1400205f, 11.46984994f, 11.80008828f, 12.13071644f, 12.46171531f, 12.79306579f, 13.12474873f, 13.45674497f, 13.78903536f, 14.12160069f, 14.45442177f, 14.78747937f, 15.12075427f, 15.4542272f, 15.78787891f, 16.12169012f, 16.45564154f, 16.78971387f, 17.1238878f, 17.45814401f, 17.79246316f, 18.12682592f, 18.46121293f, 18.79560484f, 19.12998228f, 19.46432587f, 19.79861625f, 20.13283402f, 20.46695981f, 20.80097421f, 21.13485782f, 21.46859126f, 21.80215512f, 22.13552999f, 22.46869648f, 22.80163517f, 23.13432666f, 23.46675156f, 23.79889045f, 24.13072394f, 24.46223263f, 24.79339713f, 25.12419805f, 25.454616f, 25.78463161f, 26.11422549f, 26.44337829f, 26.77207065f, 27.10028321f, 27.42799662f, 27.75519157f, 28.08184871f, 28.40794874f, 28.73347236f, 29.05840027f, 29.38271319f, 29.70639187f, 30.02941704f, 30.35176947f, 30.67342993f, 30.99437923f, 31.31459816f, 31.63406755f, 31.95276825f, 32.27068111f, 32.58778702f, 32.90406686f, 33.21950158f, 33.53407209f, 33.84775936f, 34.16054437f, 34.55603503f };
    private readonly float[] y = { 0, 0.7060985179f, 1.398780836f, 2.078046954f, 2.743896872f, 3.39633059f, 4.035348107f, 4.660949425f, 5.273134543f, 5.871903461f, 6.457256179f, 7.029192697f, 7.587713015f, 8.132817133f, 8.664505051f, 9.182776769f, 9.687632287f, 10.1790716f, 10.65709472f, 11.12170164f, 11.57289236f, 12.01066688f, 12.43502519f, 12.84596731f, 13.24349323f, 13.62760295f, 13.99829647f, 14.35557378f, 14.6994349f, 15.02987982f, 15.34690854f, 15.65052106f, 15.94071737f, 16.21749749f, 16.48086141f, 16.73080913f, 16.96734064f, 17.19045596f, 17.40015508f, 17.596438f, 17.77930472f, 17.94875523f, 18.10478955f, 18.24740767f, 18.37660959f, 18.49239531f, 18.59476482f, 18.68371814f, 18.75925526f, 18.82137618f, 18.8700809f, 18.90536941f, 18.92724173f, 18.93569785f, 18.93073777f, 18.91236149f, 18.880569f, 18.83536032f, 18.77673544f, 18.70469436f, 18.61923707f, 18.52036359f, 18.40807391f, 18.28236803f, 18.14324595f, 17.99070766f, 17.82475318f, 17.6453825f, 17.45259562f, 17.24639254f, 17.02677325f, 16.79373777f, 16.54728609f, 16.28741821f, 16.01413413f, 15.72743384f, 15.42731736f, 15.11378468f, 14.7868358f, 14.44647071f, 14.09268943f, 13.72549195f, 13.34487827f, 12.95084839f, 12.5434023f, 12.12254002f, 11.68826154f, 11.24056686f, 10.77945598f, 10.30492889f, 9.816985612f, 9.31562613f, 8.800850448f, 8.272658566f, 7.731050484f, 7.176026201f, 6.607585719f, 6.025729037f, 5.430456155f, 4.821767073f, 4.199661791f, 3.564140309f, 2.915202627f, 2.252848745f, 1.577078663f, 0.8878923805f, 0 };
    private readonly float[] z = { 0, 0.119960588f, 0.237221967f, 0.351777122f, 0.463619145f, 0.572741235f, 0.679136697f, 0.782798945f, 0.883721499f, 0.981897987f, 1.077322145f, 1.169987818f, 1.259888959f, 1.347019628f, 1.431373996f, 1.512946342f, 1.591731053f, 1.667722627f, 1.74091567f, 1.811304899f, 1.878885142f, 1.943651333f, 2.00559852f, 2.064721859f, 2.121016619f, 2.174478178f, 2.225102025f, 2.272883759f, 2.317819094f, 2.35990385f, 2.399133964f, 2.43550548f, 2.469014556f, 2.499657462f, 2.52743058f, 2.552330402f, 2.574353537f, 2.593496701f, 2.609756726f, 2.623130556f, 2.633615247f, 2.641207969f, 2.645906005f, 2.647706749f, 2.64660771f, 2.642606511f, 2.635700887f, 2.625888687f, 2.613167873f, 2.597536522f, 2.578992823f, 2.55753508f, 2.533161711f, 2.505871247f, 2.475662334f, 2.442533732f, 2.406484313f, 2.367513068f, 2.325619096f, 2.280801616f, 2.233059959f, 2.182393569f, 2.128802006f, 2.072284946f, 2.012842176f, 1.9504736f, 1.885179236f, 1.816959216f, 1.745813788f, 1.671743314f, 1.594748269f, 1.514829246f, 1.431986949f, 1.3462222f, 1.257535933f, 1.165929198f, 1.07140316f, 0.973959097f, 0.873598403f, 0.770322588f, 0.664133272f, 0.555032195f, 0.443021208f, 0.328102278f, 0.210277485f, 0.089549026f, -0.03408098f, -0.1606097f, -0.2900348f, -0.4223537f, -0.5575633f, -0.6956615f, -0.8366446f, -0.9805093f, -1.127253f, -1.276872f, -1.429364f, -1.584723f, -1.742948f, -1.904033f, -2.067975f, -2.234771f, -2.404415f, -2.576904f, -2.752233f, -2.930398f, -3.161297f };

    [SerializeField]
    [Range(0f, 1f)]
    private float _speed;

    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    // Called at constant time interval
    void FixedUpdate()
    {
        Debug.Log(transform.position);
        if (Input.GetMouseButtonDown(0) && _isOnGround == true)
        {
            for (int i = 0; i < x.Length; i++)
            {
                //Vector3 dest = new Vector3(x[i], y[i], z[i]);
                //transform.Translate(dest * Time.deltaTime * _speed); // transform.Translate ignores box colliders
                rb.AddForce(x[i]*_speed, y[i]*_speed, z[i]*_speed);
            }
        }
        if (Input.GetMouseButtonDown(1) && _isOnGround == true)
        {
            SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex, LoadSceneMode.Single);
        }
    }

    // Called on collision detection
    void OnCollisionEnter(Collision collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            _isOnGround = true;
        }
    }

    // Called when exit collision
    void OnCollisionExit(Collision collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            _isOnGround = false;
        }
    }
}